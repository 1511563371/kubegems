---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: modeldeployments.models.kubegems.io
spec:
  group: models.kubegems.io
  names:
    kind: ModelDeployment
    listKind: ModelDeploymentList
    plural: modeldeployments
    singular: modeldeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status of the resource
      jsonPath: .spec.model.name
      name: MODEL
      type: string
    - description: Status of the resource
      jsonPath: .status.phase
      name: PHASE
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ModelDeploymentSpec is the spec for a ModelDeployment
            properties:
              env:
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previously defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        Double $$ are reduced to a single $, which allows for escaping
                        the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the
                        string literal "$(VAR_NAME)". Escaped references will never
                        be expanded, regardless of whether the variable exists or
                        not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              host:
                description: Host is the hostname of the model serving endpoint automatically
                  generated if not specified
                type: string
              model:
                properties:
                  framework:
                    type: string
                  image:
                    type: string
                  name:
                    type: string
                  source:
                    type: string
                  url:
                    type: string
                  version:
                    type: string
                type: object
              modelPath:
                type: string
              replicas:
                format: int32
                type: integer
              resources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
            type: object
          status:
            properties:
              message:
                type: string
              oamStatus:
                description: AppStatus defines the observed state of Application
                properties:
                  appliedResources:
                    description: AppliedResources record the resources that the  workflow
                      step apply.
                    items:
                      description: ClusterObjectReference defines the object reference
                        with cluster.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        cluster:
                          type: string
                        creator:
                          description: ResourceCreatorRole defines the resource creator.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    type: array
                  components:
                    description: Components record the related Components created
                      by Application Controller
                    items:
                      description: 'ObjectReference contains enough information to
                        let you inspect or modify the referred object. --- New uses
                        of this type are discouraged because of difficulty describing
                        its usage when embedded in APIs. 1. Ignored fields.  It includes
                        many fields which are not generally honored.  For instance,
                        ResourceVersion and FieldPath are both very rarely valid in
                        actual usage. 2. Invalid usage help.  It is impossible to
                        add specific help for individual usage.  In most embedded
                        usages, there are particular restrictions like, "must refer
                        only to types A and B" or "UID not honored" or "name must
                        be restricted". Those cannot be well described when embedded.
                        3. Inconsistent validation.  Because the usages are different,
                        the validation rules are different by usage, which makes it
                        hard for users to predict what will happen. 4. The fields
                        are both imprecise and overly precise.  Kind is not a precise
                        mapping to a URL. This can produce ambiguity during interpretation
                        and require a REST mapping.  In most cases, the dependency
                        is on the group,resource tuple and the version of the actual
                        struct is irrelevant. 5. We cannot easily change it.  Because
                        this type is embedded in many locations, updates to this type
                        will affect numerous schemas.  Don''t make new APIs embed
                        an underspecified API type they do not control. Instead of
                        using this type, create a locally provided and used type that
                        is well-focused on your reference. For example, ServiceReferences
                        for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                        .'
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                    type: array
                  conditions:
                    description: Conditions of the resource.
                    items:
                      description: A Condition that may apply to a resource.
                      properties:
                        lastTransitionTime:
                          description: LastTransitionTime is the last time this condition
                            transitioned from one status to another.
                          format: date-time
                          type: string
                        message:
                          description: A Message containing details about this condition's
                            last transition from one status to another, if any.
                          type: string
                        reason:
                          description: A Reason for this condition's last transition
                            from one status to another.
                          type: string
                        status:
                          description: Status of this condition; is it currently True,
                            False, or Unknown?
                          type: string
                        type:
                          description: Type of this condition. At most one of each
                            condition type may apply to a resource at any point in
                            time.
                          type: string
                      required:
                      - lastTransitionTime
                      - reason
                      - status
                      - type
                      type: object
                    type: array
                  latestRevision:
                    description: LatestRevision of the application configuration it
                      generates
                    properties:
                      name:
                        type: string
                      revision:
                        format: int64
                        type: integer
                      revisionHash:
                        description: RevisionHash record the hash value of the spec
                          of ApplicationRevision object.
                        type: string
                    required:
                    - name
                    - revision
                    type: object
                  observedGeneration:
                    description: The generation observed by the application controller.
                    format: int64
                    type: integer
                  resourceTracker:
                    description: ResourceTracker record the status of the ResourceTracker
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                  rollout:
                    description: AppRolloutStatus defines the observed state of AppRollout
                    properties:
                      LastSourceAppRevision:
                        description: LastSourceAppRevision contains the name of the
                          app that we need to upgrade from. We will restart the rollout
                          if this is not the same as the spec
                        type: string
                      batchRollingState:
                        description: BatchRollingState only meaningful when the Status
                          is rolling
                        type: string
                      conditions:
                        description: Conditions of the resource.
                        items:
                          description: A Condition that may apply to a resource.
                          properties:
                            lastTransitionTime:
                              description: LastTransitionTime is the last time this
                                condition transitioned from one status to another.
                              format: date-time
                              type: string
                            message:
                              description: A Message containing details about this
                                condition's last transition from one status to another,
                                if any.
                              type: string
                            reason:
                              description: A Reason for this condition's last transition
                                from one status to another.
                              type: string
                            status:
                              description: Status of this condition; is it currently
                                True, False, or Unknown?
                              type: string
                            type:
                              description: Type of this condition. At most one of
                                each condition type may apply to a resource at any
                                point in time.
                              type: string
                          required:
                          - lastTransitionTime
                          - reason
                          - status
                          - type
                          type: object
                        type: array
                      currentBatch:
                        description: The current batch the rollout is working on/blocked
                          it starts from 0
                        format: int32
                        type: integer
                      lastAppliedPodTemplateIdentifier:
                        description: lastAppliedPodTemplateIdentifier is a string
                          that uniquely represent the last pod template each workload
                          type could use different ways to identify that so we cannot
                          compare between resources We update this field only after
                          a successful rollout
                        type: string
                      lastTargetAppRevision:
                        description: LastUpgradedTargetAppRevision contains the name
                          of the app that we upgraded to We will restart the rollout
                          if this is not the same as the spec
                        type: string
                      rollingState:
                        description: RollingState is the Rollout State
                        type: string
                      rolloutOriginalSize:
                        description: RolloutTargetSize is the size of the target resources.
                          This is determined once the initial spec verification and
                          does not change until the rollout is restarted
                        format: int32
                        type: integer
                      rolloutTargetSize:
                        description: RolloutTargetSize is the size of the target resources.
                          This is determined once the initial spec verification and
                          does not change until the rollout is restarted
                        format: int32
                        type: integer
                      targetGeneration:
                        description: NewPodTemplateIdentifier is a string that uniquely
                          represent the new pod template each workload type could
                          use different ways to identify that so we cannot compare
                          between resources
                        type: string
                      upgradedReadyReplicas:
                        description: UpgradedReadyReplicas is the number of Pods upgraded
                          by the rollout controller that have a Ready Condition.
                        format: int32
                        type: integer
                      upgradedReplicas:
                        description: UpgradedReplicas is the number of Pods upgraded
                          by the rollout controller
                        format: int32
                        type: integer
                    required:
                    - currentBatch
                    - lastTargetAppRevision
                    - rollingState
                    - upgradedReadyReplicas
                    - upgradedReplicas
                    type: object
                  services:
                    description: Services record the status of the application services
                    items:
                      description: ApplicationComponentStatus record the health status
                        of App component
                      properties:
                        env:
                          type: string
                        healthy:
                          type: boolean
                        message:
                          type: string
                        name:
                          type: string
                        scopes:
                          items:
                            description: 'ObjectReference contains enough information
                              to let you inspect or modify the referred object. ---
                              New uses of this type are discouraged because of difficulty
                              describing its usage when embedded in APIs. 1. Ignored
                              fields.  It includes many fields which are not generally
                              honored.  For instance, ResourceVersion and FieldPath
                              are both very rarely valid in actual usage. 2. Invalid
                              usage help.  It is impossible to add specific help for
                              individual usage.  In most embedded usages, there are
                              particular restrictions like, "must refer only to types
                              A and B" or "UID not honored" or "name must be restricted".
                              Those cannot be well described when embedded. 3. Inconsistent
                              validation.  Because the usages are different, the validation
                              rules are different by usage, which makes it hard for
                              users to predict what will happen. 4. The fields are
                              both imprecise and overly precise.  Kind is not a precise
                              mapping to a URL. This can produce ambiguity during
                              interpretation and require a REST mapping.  In most
                              cases, the dependency is on the group,resource tuple
                              and the version of the actual struct is irrelevant.
                              5. We cannot easily change it.  Because this type is
                              embedded in many locations, updates to this type will
                              affect numerous schemas.  Don''t make new APIs embed
                              an underspecified API type they do not control. Instead
                              of using this type, create a locally provided and used
                              type that is well-focused on your reference. For example,
                              ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                              .'
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: 'If referring to a piece of an object
                                  instead of an entire object, this string should
                                  contain a valid JSON/Go field access statement,
                                  such as desiredState.manifest.containers[2]. For
                                  example, if the object reference is to a container
                                  within a pod, this would take on a value like: "spec.containers{name}"
                                  (where "name" refers to the name of the container
                                  that triggered the event) or if no container name
                                  is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only
                                  to have some well-defined way of referencing a part
                                  of an object. TODO: this design is not final and
                                  this field is subject to change in the future.'
                                type: string
                              kind:
                                description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              namespace:
                                description: 'Namespace of the referent. More info:
                                  https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                type: string
                              resourceVersion:
                                description: 'Specific resourceVersion to which this
                                  reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                type: string
                              uid:
                                description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                type: string
                            type: object
                          type: array
                        traits:
                          items:
                            description: ApplicationTraitStatus records the trait
                              health status
                            properties:
                              healthy:
                                type: boolean
                              message:
                                type: string
                              type:
                                type: string
                            required:
                            - healthy
                            - type
                            type: object
                          type: array
                        workloadDefinition:
                          description: WorkloadDefinition is the definition of a WorkloadDefinition,
                            such as deployments/apps.v1
                          properties:
                            apiVersion:
                              type: string
                            kind:
                              type: string
                          required:
                          - apiVersion
                          - kind
                          type: object
                      required:
                      - healthy
                      - name
                      type: object
                    type: array
                  status:
                    description: ApplicationPhase is a label for the condition of
                      a application at the current time
                    type: string
                  workflow:
                    description: Workflow record the status of workflow
                    properties:
                      appRevision:
                        type: string
                      contextBackend:
                        description: 'ObjectReference contains enough information
                          to let you inspect or modify the referred object. --- New
                          uses of this type are discouraged because of difficulty
                          describing its usage when embedded in APIs. 1. Ignored fields.  It
                          includes many fields which are not generally honored.  For
                          instance, ResourceVersion and FieldPath are both very rarely
                          valid in actual usage. 2. Invalid usage help.  It is impossible
                          to add specific help for individual usage.  In most embedded
                          usages, there are particular restrictions like, "must refer
                          only to types A and B" or "UID not honored" or "name must
                          be restricted". Those cannot be well described when embedded.
                          3. Inconsistent validation.  Because the usages are different,
                          the validation rules are different by usage, which makes
                          it hard for users to predict what will happen. 4. The fields
                          are both imprecise and overly precise.  Kind is not a precise
                          mapping to a URL. This can produce ambiguity during interpretation
                          and require a REST mapping.  In most cases, the dependency
                          is on the group,resource tuple and the version of the actual
                          struct is irrelevant. 5. We cannot easily change it.  Because
                          this type is embedded in many locations, updates to this
                          type will affect numerous schemas.  Don''t make new APIs
                          embed an underspecified API type they do not control. Instead
                          of using this type, create a locally provided and used type
                          that is well-focused on your reference. For example, ServiceReferences
                          for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                          .'
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead
                              of an entire object, this string should contain a valid
                              JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container
                              within a pod, this would take on a value like: "spec.containers{name}"
                              (where "name" refers to the name of the container that
                              triggered the event) or if no container name is specified
                              "spec.containers[2]" (container with index 2 in this
                              pod). This syntax is chosen only to have some well-defined
                              way of referencing a part of an object. TODO: this design
                              is not final and this field is subject to change in
                              the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference
                              is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      mode:
                        description: WorkflowMode describes the mode of workflow
                        type: string
                      steps:
                        items:
                          description: WorkflowStepStatus record the status of a workflow
                            step
                          properties:
                            id:
                              type: string
                            message:
                              description: A human readable message indicating details
                                about why the workflowStep is in this state.
                              type: string
                            name:
                              type: string
                            phase:
                              description: WorkflowStepPhase describes the phase of
                                a workflow step.
                              type: string
                            reason:
                              description: A brief CamelCase message indicating details
                                about why the workflowStep is in this state.
                              type: string
                            subSteps:
                              description: SubStepsStatus record the status of workflow
                                steps.
                              properties:
                                mode:
                                  description: WorkflowMode describes the mode of
                                    workflow
                                  type: string
                                stepIndex:
                                  type: integer
                                steps:
                                  items:
                                    description: WorkflowSubStepStatus record the
                                      status of a workflow step
                                    properties:
                                      id:
                                        type: string
                                      message:
                                        description: A human readable message indicating
                                          details about why the workflowStep is in
                                          this state.
                                        type: string
                                      name:
                                        type: string
                                      phase:
                                        description: WorkflowStepPhase describes the
                                          phase of a workflow step.
                                        type: string
                                      reason:
                                        description: A brief CamelCase message indicating
                                          details about why the workflowStep is in
                                          this state.
                                        type: string
                                      type:
                                        type: string
                                    required:
                                    - id
                                    type: object
                                  type: array
                              type: object
                            type:
                              type: string
                          required:
                          - id
                          type: object
                        type: array
                      suspend:
                        type: boolean
                      terminated:
                        type: boolean
                    required:
                    - mode
                    - suspend
                    - terminated
                    type: object
                type: object
              phase:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
