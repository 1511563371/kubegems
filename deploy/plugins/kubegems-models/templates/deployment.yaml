apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "kubegems.models.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: models
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.models.replicaCount }}
  {{- if .Values.models.updateStrategy }}
  strategy: {{- toYaml .Values.models.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: models
  template:
    metadata:
      {{- if .Values.models.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.models.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: models
        {{- if .Values.models.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.models.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "kubegems.models.serviceAccountName" . }}
      {{- include "kubegems.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.models.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.models.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.models.enableAffinity -}}
      {{- if .Values.models.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.models.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.models.podAffinityPreset "component" "models" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.models.podAntiAffinityPreset "component" "models" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.models.nodeAffinityPreset.type "key" .Values.models.nodeAffinityPreset.key "values" .Values.models.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- end }}
      {{- if .Values.models.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.models.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.models.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.models.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.models.priorityClassName }}
      priorityClassName: {{ .Values.models.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.models.schedulerName }}
      schedulerName: {{ .Values.models.schedulerName | quote }}
      {{- end }}
      {{- if .Values.models.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.models.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: models
          image: {{ include "kubegems.models.image" . }}
          imagePullPolicy: {{ .Values.models.image.pullPolicy }}
          {{- if .Values.models.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.models.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.models.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.models.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.models.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.models.args "context" $) | nindent 12 }}
          {{- else }}
          args:
            - models
            {{- if .Values.models.leaderElection.enabled }}
            - --enableleaderelection
            {{- end }}
            - --probeaddr=:{{- .Values.models.containerPorts.probe }}
            {{- if .Values.models.metrics.enabled }}
            - --metricsaddr=:{{- .Values.models.metrics.service.port }}
            {{- end }}
            {{- if .Values.models.extraArgs }}
            {{- include "common.tplvalues.render" (dict "value" .Values.models.extraArgs "context" $) | nindent 12 }}
            {{- end }}
          {{- end }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.models.logLevel }}
            {{- if .Values.models.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.models.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if or .Values.models.extraEnvVarsCM .Values.models.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.models.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.models.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.models.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.models.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- end }}
          {{- if .Values.models.resources }}
          resources: {{- toYaml .Values.models.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: probe
              containerPort: {{ .Values.models.containerPorts.probe }}
              protocol: TCP
            {{- if .Values.models.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.models.metrics.service.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.models.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.models.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /healthz
              port: probe
          {{- else if .Values.models.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.models.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.models.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.models.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /healthz
              port: probe
          {{- else if .Values.models.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.models.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.models.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.models.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /healthz
              port: http
          {{- else if .Values.models.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.models.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.models.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.models.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.models.extraVolumeMounts }}
          volumeMounts: {{- include "common.tplvalues.render" (dict "value" .Values.models.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.models.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.models.sidecars "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.models.extraVolumes }}
        volumes: {{- include "common.tplvalues.render" (dict "value" .Values.models.extraVolumes "context" $) | nindent 8 }}
        {{- end }}